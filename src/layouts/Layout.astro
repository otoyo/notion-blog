---
import { PUBLIC_GA_TRACKING_ID, ENABLE_LIGHTBOX } from '../server-constants.ts'
import { getDatabase } from '../lib/notion/client.ts'
import { getNavLink, getStaticFilePath, filePath } from '../lib/blog-helpers.ts'
import '../styles/syntax-coloring.css'
import GoogleAnalytics from '../components/GoogleAnalytics.astro'
import NavMenu from '../components/NavMenu.astro'
import SearchModal from '../components/SearchModal.astro'
import SearchButton from '../components/SearchButton.astro'

export interface Props {
  title: string
  description: string
  path: string
  ogImage: string
}

const { title = '', description = '', path = '/', ogImage = '' } = Astro.props

const database = await getDatabase()

const siteTitle = title ? `${title} - ${database.Title}` : database.Title
const siteDescription = description ? description : database.Description
const siteURL = new URL(getNavLink(path), Astro.site).toString()
const siteOGImage = new URL(getStaticFilePath('/site-logo.jpeg'), Astro.site)

let coverImageURL: string
if (database.Cover) {
  if (database.Cover.Type === 'external') {
    coverImageURL = database.Cover.Url
  } else if (database.Cover.Type === 'file') {
    try {
      coverImageURL = filePath(new URL(database.Cover.Url))
    } catch (err) {
      console.log('Invalid DB cover image URL')
    }
  }
}

let customIconURL: string
if (database.Icon && database.Icon.Type === 'file') {
  try {
    customIconURL = filePath(new URL(database.Icon.Url))
  } catch (err) {
    console.log('Invalid DB custom icon URL')
  }
}
---

<!DOCTYPE html>
<html lang="en" prefix="og: https://ogp.me/ns#">
  <head>
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta name="robots" content="max-image-preview:large" />
    <meta charset="UTF-8" />
    <meta name="generator" content={Astro.generator} />
    <title>{siteTitle}</title>
    <meta name="description" content={siteDescription} />
    <link rel="canonical" href={siteURL} />
    <meta property="og:url" content={siteURL} />
    <meta property="og:title" content={siteTitle} />
    <meta property="og:description" content={siteDescription} />
    <meta property="og:site_name" content={database.Title} />
    <meta property="og:image" content={ogImage || siteOGImage} />
    <meta name="twitter:title" content={siteTitle} />
    <meta name="twitter:description" content={siteDescription} />
    {
      ogImage ? (
        <>
          <meta name="twitter:card" content="summary_large_image" />
          <meta name="twitter:image" content={ogImage} />
        </>
      ) : (
        <>
          <meta name="twitter:card" content="summary" />
          <meta name="twitter:image" content={siteOGImage} />
        </>
      )
    }
    <link
      rel="stylesheet"
      href="https://cdn.jsdelivr.net/npm/katex@0.16.4/dist/katex.min.css"
      integrity="sha384-vKruj+a13U8yHIkAyGgK1J3ArTLzrFGBbBc0tDp4ad/EyewESeXE/Iv67Aj8gKZ0"
      crossorigin="anonymous"
    />
  </head>
  <body>
    <GoogleAnalytics trackingId={PUBLIC_GA_TRACKING_ID} />
    <div class="container">
      <header>
        {
          coverImageURL && (
            <div class="cover">
              <img src={coverImageURL} />
            </div>
          )
        }
      </header>

      <main>
        <div class="content">
          <header>
            <div class="title-container">
              <h1>
                <a href={getNavLink('/')}>
                  {
                    database.Icon && database.Icon.Type === 'emoji' ? (
                      <>
                        <span class="emoji">{database.Icon.Emoji}</span>
                        <span class="title">{database.Title}</span>
                      </>
                    ) : database.Icon && database.Icon.Type === 'external' ? (
                      <>
                        <img src={database.Icon.Url} />
                        <span class="title">{database.Title}</span>
                      </>
                    ) : database.Icon && database.Icon.Type === 'file' ? (
                      <>
                        <img src={customIconURL} class="custom-icon" />
                        <span class="title">{database.Title}</span>
                      </>
                    ) : (
                      database.Title
                    )
                  }
                </a>
              </h1>
              <section>
                <NavMenu />
              </section>
            </div>
            <div class="search-button-container">
              <SearchButton />
            </div>
          </header>

          <slot name="main" />

          <footer>
            <div class="copyright">
              <span>&copy; アルパカログ</span>
            </div>
            <div class="powered-by">
              <span>Powered by </span>
              <a href="https://github.com/otoyo/astro-notion-blog"
                >astro-notion-blog</a
              >
            </div>
          </footer>
        </div>
      </main>
    </div>

    <SearchModal />
    {
      ENABLE_LIGHTBOX && (
        <script src={getStaticFilePath('/scripts/fslightbox.js')} />
      )
    }
  </body>
</html>

<style>
  .container {
    max-width: 900px;
    min-height: 100vh;
    margin: auto auto;
  }
  .container > header {
  }

  div.cover {
  }
  div.cover img {
    display: block;
    width: 100%;
    height: 16vh;
    object-fit: cover;
    object-position: center 20%;
  }

  main {
    max-width: 100%;
    padding: 1rem 2rem 0;
  }
  @media (max-width: 640px) {
    main {
      padding: 0.4rem 1.6rem 0;
    }
  }

  div.content {
  }

  main header {
    display: flex;
    justify-content: space-between;
    margin: 0 0 50px;
  }
  @media (max-width: 640px) {
    main header {
      margin: 0 0 40px;
    }
  }
  main header > div.title-container {
  }
  main header > div.title-container h1 {
    font-size: 2rem;
    font-weight: 400;
  }
  main header > div.title-container h1 a {
    display: flex;
  }
  main header > div.title-container h1 a span,
  main header > div.title-container h1 a img {
    display: block;
  }
  main header > div.title-container h1 a span.emoji {
    margin-right: 1em;
    margin-left: -0.1rem;
  }
  main header > div.title-container h1 a img {
    width: 120px;
    height: 120px;
    margin-top: -48px;
    margin-right: 16px;
  }
  main header > div.title-container h1 a img.custom-icon {
    border-radius: var(--radius);
  }
  main header > div.title-container h1 a span.title {
    display: inline-block;
    margin-top: 0.4rem;
  }
  main header > div.title-container > section {
    margin: -40px 0 0 136px;
  }
  main header > div.search-button-container {
    margin: 8px 0 0;
  }
  @media (max-width: 640px) {
    main header > div.title-container h1 {
      font-size: 1.6rem;
    }
    main header > div.title-container h1 a img {
      width: 72px;
      height: 72px;
      margin-top: -20px;
      margin-right: 12px;
    }
    main header > div.title-container h1 a span.title {
      margin-top: 0.3rem;
    }
    main header > div.title-container > section {
      margin: -32px 0 0 84px;
    }
    main header > div.search-button-container {
      margin: 2px 0 0;
    }
  }

  main footer {
    display: flex;
    justify-content: space-between;
    margin: 60px 0 10px;
  }
  @media (max-width: 640px) {
    main footer {
      display: block;
      margin: 60px auto 20px;
    }
  }
  main footer > div.copyright {
    font-size: 0.9rem;
    color: #6b7280;
  }
  main footer > div.powered-by {
    font-size: 0.9rem;
    color: #6b7280;
  }
  main footer > div.powered-by > a:hover {
    color: var(--fg);
    text-decoration: underline;
  }
  @media (max-width: 640px) {
    main footer > div.copyright {
      margin-bottom: 1rem;
      text-align: center;
    }
    main footer > div.powered-by {
      margin-bottom: 1rem;
      text-align: center;
    }
  }
</style>

<style is:global>
  :root {
    --fg: rgb(34, 39, 42);
    --bg: rgb(250, 250, 250);

    --accent: rgb(203, 42, 66);
    --anchor-border: hsl(172deg 18% 41%);

    --radius: 3px;
  }

  * {
    box-sizing: border-box;
    word-break: break-word;
  }

  html,
  body {
    padding: 0;
    margin: 0;
    font-size: 14px;
    -webkit-text-size-adjust: 100%;
  }

  body {
    min-height: 100vh;
    background: var(--bg);
    color: var(--fg);
    font-family: ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,Liberation Mono,Courier New,monospace;

    /*background-image: radial-gradient(#ddd 1px, transparent 1px),
      radial-gradient(#ddd 1px, transparent 1px);*/
    background-position: 0 0, 25px 25px;
    background-attachment: fixed;
    background-size: 50px 50px;

    /* Hack */
    overflow-x: hidden;

    -webkit-font-smoothing: antialiased;
  }

  figure {
    margin: 0;
    font-size: 0.85rem;
    color: #999;
    line-height: 1.8rem;
  }

  a {
    color: var(--accents-1);
    text-decoration: none;
  }
  a:hover {
    color: var(--accents-1);
  }

  mark {
    padding: var(--gap-quarter);
    border-radius: var(--radius);
    background: rgba(247, 212, 255, 0.8);
  }

  h1 {
    margin: 0;
    color: var(--fg);
    font-size: 2rem;
    font-weight: 700;
  }

  h2 {
    margin: 0;
    color: var(--fg);
    line-height: 1.3;
    font-size: 1.2rem;
    font-weight: normal;
  }
  h2 > span.tag {
    border-radius: 4px;
    padding: 3px 9px;
    background: rgba(227, 226, 224, 0.5);
  }

  h3 {
    margin: 0;
    color: var(--fg);
    font-size: 1.2rem;
    font-weight: 700;
  }

  @media (max-width: 640px) {
    h1 {
      font-size: 1.6rem;
    }

    h2 {
      font-size: 1.15rem;
    }

    h3 {
      font-size: 1.15rem;
    }
  }

  ol {
    color: #222;
    font-weight: 400;
    font-size: 0.9rem;
    line-height: 1.8rem;
  }
  p,
  ul {
    color: #222;
    font-weight: 400;
    font-size: 1rem;
    line-height: 1.8rem;
  }
  ul,
  ol {
    margin: 0;
    padding-inline-start: 1.5rem;
  }
  pre {
    margin: 0;
    white-space: pre;
    tab-size: 2;
  }
  pre :global(code) {
    overflow: auto;
    -webkit-overflow-scrolling: touch;
  }

  hr {
    display: block;
    height: 1px;
    border: 0;
    margin: 0.3rem 0;
    background-color: #333;
  }

  code {
    font-size: 0.9rem;
    background: #f1f1f1;
    color: #eb5757;
    padding: 0.25rem;
    border-radius: var(--radius);
    font-family: var(--font-mono);
  }

  table {
    color: #222;
    border-collapse: collapse;
  }

  table tr {
    vertical-align: middle;
  }

  table th {
    font-weight: 600;
    background-color: #f4f4f4;
  }

  table td,
  table th {
    font-size: 0.9rem;
    border: 1px solid #e4e4e4;
    padding: 0.5rem 1rem;
    line-height: 1.2rem;
  }
</style>
