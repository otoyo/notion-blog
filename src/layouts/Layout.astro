---
import {
  PUBLIC_SITE_TITLE,
  PUBLIC_SITE_DESCRIPTION,
  PUBLIC_GA_TRACKING_ID,
  ENABLE_LIGHTBOX,
} from '../server-constants.ts'
import { getNavLink } from '../lib/blog-helpers.ts'
import '../styles/syntax-coloring.css'
import GoogleAnalytics from '../components/GoogleAnalytics.astro'

export interface Props {
  title: string
  desctiption: string
  path: string
  ogImage: string
}

const { title = '', description = '', path = '/', ogImage = '' } = Astro.props

const siteTitle = title ? `${title} - ${PUBLIC_SITE_TITLE}` : PUBLIC_SITE_TITLE
const siteDescription = description ? description : PUBLIC_SITE_DESCRIPTION
const siteURL = new URL(path, Astro.site).toString()
const siteOGImage = new URL('/site-logo.jpeg', Astro.site)

const navItems = [
  { label: 'ホーム', path: '/' },
  { label: 'ブログ', path: '/blog' },
  { label: '読者になる', path: '/subscribe' },
]
---

<!DOCTYPE html>
<html lang="en" prefix="og: https://ogp.me/ns#">
  <head>
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta name="robots" content="max-image-preview:large" />
    <meta charset="UTF-8" />
    <meta name="generator" content={Astro.generator} />
    <title>{siteTitle}</title>
    <meta name="description" content={siteDescription} />
    <link rel="canonical" href={siteURL} />
    <meta property="og:url" content={siteURL} />
    <meta property="og:title" content={siteTitle} />
    <meta property="og:description" content={siteDescription} />
    <meta property="og:site_name" content={PUBLIC_SITE_TITLE} />
    <meta property="og:image" content={ogImage || siteOGImage} />
    <meta name="twitter:title" content={siteTitle} />
    <meta name="twitter:description" content={siteDescription} />
    {
      ogImage ? (
        <>
          <meta name="twitter:card" content="summary_large_image" />
          <meta name="twitter:image" content={ogImage} />
        </>
      ) : (
        <>
          <meta name="twitter:card" content="summary" />
          <meta name="twitter:image" content={siteOGImage} />
        </>
      )
    }
    <link
      rel="stylesheet"
      href="https://cdn.jsdelivr.net/npm/katex@0.16.4/dist/katex.min.css"
      integrity="sha384-vKruj+a13U8yHIkAyGgK1J3ArTLzrFGBbBc0tDp4ad/EyewESeXE/Iv67Aj8gKZ0"
      crossorigin="anonymous"
    />
  </head>
  <body>
    <GoogleAnalytics trackingId={PUBLIC_GA_TRACKING_ID} />
    <header class="header">
      <a href={getNavLink('/')}>
        <img src="/site-logo@128x128.jpeg" alt="logo" width="64" height="64" />
        <h1>{PUBLIC_SITE_TITLE}</h1>
      </a>

      <ul>
        {
          navItems.map(({ label, path: p }) => (
            <li key={label}>
              <a href={getNavLink(p)} class={p === path ? 'active' : null}>
                {label}
              </a>
            </li>
          ))
        }
      </ul>
    </header>
    <div class="container">
      <slot />
    </div>
    <footer class="footer">
      <div>
        <span>Powered by</span>
        <a href="https://github.com/otoyo/astro-notion-blog"
          >astro-notion-blog</a
        >
      </div>
    </footer>

    {ENABLE_LIGHTBOX && <script src="/scripts/fslightbox.js" />}
  </body>
</html>

<style>
  .header {
    display: block;
    padding: 15px 0;
    text-align: center;
  }
  .header > a {
    display: flex;
    justify-content: center;
    padding: 0.5rem 0;
  }
  .header > a h1 {
    padding-top: 10px;
    color: #000;
    font-weight: 400;
  }
  @media (max-width: 640px) {
    .header > a h1 {
      margin-right: 14px;
      padding-top: 14px;
    }
  }
  .header ul {
    list-style: none;
    margin: inherit;
    padding: 0.5rem 0;
    font-size: 1.1rem;
  }
  @media (max-width: 640px) {
    .header ul {
      font-size: 1rem;
    }
  }
  .header ul li {
    display: inline-block;
    padding: 0 15px;
  }
  .header ul li :global(a.active) {
    color: var(--accents-3);
  }

  .container {
    width: 100%;
    padding: 0 5%;
  }

  .footer {
    margin: 40px 0 10px;
    text-align: center;
    font-size: 0.75rem;
  }
  .footer span {
    color: #777;
  }
  .footer span a {
    color: inherit;
  }
</style>

<style is:global>
  :root {
    --gap-quarter: 0.25rem;
    --gap-half: 0.5rem;
    --gap: 1rem;
    --gap-double: 2rem;

    --bg: #fff;
    --fg: #333;
    --accents-1: #0070f3;
    --accents-2: #3291ff;
    --accents-3: #666;
    --geist-foreground: #000;
    --geist-success: #690;

    --radius: 4px;

    --font-sans: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto',
      'Oxygen', 'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans',
      'Helvetica Neue', sans-serif;
    --font-mono: SFMono-Regular, Menlo, Consolas, 'PT Mono', 'Liberation Mono',
      Courier, monospace;
  }

  * {
    box-sizing: border-box;
    word-break: break-word;
  }

  html,
  body {
    padding: 0;
    margin: 0;
    font-size: 16px;
  }

  body {
    min-height: 100vh;
    background: var(--bg);
    color: var(--fg);
    font-family: -apple-system, BlinkMacSystemFont, Helvetica Neue, Segoe UI,
      Hiragino Kaku Gothic ProN, Hiragino Sans, ヒラギノ角ゴ ProN W3, Arial,
      メイリオ, Meiryo, sans-serif;
    /*-apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Oxygen,
      Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif;
    */

    /*background-image: radial-gradient(#ddd 1px, transparent 1px),
      radial-gradient(#ddd 1px, transparent 1px);*/
    background-position: 0 0, 25px 25px;
    background-attachment: fixed;
    background-size: 50px 50px;

    /* Hack */
    overflow-x: hidden;

    -webkit-font-smoothing: antialiased;
  }

  figure {
    margin: 0;
    font-size: 0.85rem;
    color: #999;
    line-height: 1.8rem;
  }

  a {
    color: var(--accents-1);
    text-decoration: none;
  }
  a:hover {
    color: var(--accents-2);
  }

  mark {
    padding: var(--gap-quarter);
    border-radius: var(--radius);
    background: rgba(247, 212, 255, 0.8);
  }

  h1 {
    margin: 0;
    color: var(--fg);
    font-size: 2rem;
    font-weight: 700;
  }

  h2 {
    margin: 0;
    color: var(--fg);
    line-height: 1.3;
    font-size: 1.2rem;
    font-weight: normal;
  }
  h2 > span.tag {
    border-radius: 4px;
    padding: 3px 9px;
    background: rgba(227, 226, 224, 0.5);
  }

  h3 {
    margin: 0;
    color: var(--fg);
    font-size: 1.2rem;
    font-weight: 700;
  }

  @media (max-width: 640px) {
    h1 {
      font-size: 1.6rem;
    }

    h2 {
      font-size: 1.15rem;
    }

    h3 {
      font-size: 1.15rem;
    }
  }

  ol {
    color: #222;
    font-weight: 400;
    font-size: 0.9rem;
    line-height: 1.8rem;
  }
  p,
  ul {
    color: #222;
    font-weight: 400;
    font-size: 1rem;
    line-height: 1.8rem;
  }
  ul,
  ol {
    margin: 0;
    padding-inline-start: 1.5rem;
  }
  pre {
    margin: 0;
    white-space: pre;
    tab-size: 2;
  }
  pre :global(code) {
    overflow: auto;
    -webkit-overflow-scrolling: touch;
  }

  hr {
    display: block;
    height: 1px;
    border: 0;
    margin: 0.3rem 0;
    background-color: #333;
  }

  code {
    font-size: 0.9rem;
    background: #f1f1f1;
    color: #eb5757;
    padding: 0.25rem;
    border-radius: var(--radius);
    font-family: var(--font-mono);
  }

  table {
    color: #222;
    border-collapse: collapse;
  }

  table tr {
    vertical-align: middle;
  }

  table th {
    font-weight: 600;
    background-color: #f4f4f4;
  }

  table td,
  table th {
    font-size: 0.9rem;
    border: 1px solid #e4e4e4;
    padding: 0.5rem 1rem;
    line-height: 1.2rem;
  }
</style>
