---
import {
  getPostsByPage,
  getRankedPosts,
  getAllTags,
  getNumberOfPages,
  getPostsByPage,
} from '../../../lib/notion/client.ts'
import {
  buildPostFeaturedImageURLs,
  buildURLToImageMap,
} from '../../../lib/blog-helpers.ts'
import Layout from '../../../layouts/Layout.astro'
import NoContents from '../../../components/NoContents.astro'
import PostDate from '../../../components/PostDate.astro'
import PostTags from '../../../components/PostTags.astro'
import PostTitle from '../../../components/PostTitle.astro'
import PostFeaturedImage from '../../../components/PostFeaturedImage.astro'
import PostExcerpt from '../../../components/PostExcerpt.astro'
import ReadMoreLink from '../../../components/ReadMoreLink.astro'
import Pagination from '../../../components/Pagination.astro'
import BlogPostsLink from '../../../components/BlogPostsLink.astro'
import BlogTagsLink from '../../../components/BlogTagsLink.astro'
import styles from '../../../styles/blog.module.css'

export async function getStaticPaths() {
  const numberOfPages = await getNumberOfPages()

  let params = []
  for (let i = 2; i <= numberOfPages; i++) {
    params.push({ params: { page: i.toString() }})
  }
  return params
}

const { page } = Astro.params

const [posts, rankedPosts, tags, numberOfPages] = await Promise.all([
  getPostsByPage(parseInt(page, 10)),
  getRankedPosts(),
  getAllTags(),
  getNumberOfPages(),
])

const imageURLs = buildPostFeaturedImageURLs(posts).filter(url => url)
const imageURLMap = await buildURLToImageMap(imageURLs)
---

<Layout title={`Posts ${page}/${numberOfPages}`} path={`/blog/page/${page}`}>
  <div className={styles.container}>
    <main>
      <header>
        <h2>Posts {page}/{numberOfPages}</h2>
      </header>

      {posts.length === 0 ? (
          <NoContents contents={posts} />
        ) : posts.map(post => (
          <div className={styles.post} key={post.Slug}>
            <PostDate post={post} />
            <PostTags post={post} />
            <PostTitle post={post} />
            <PostFeaturedImage post={post} urlMap={imageURLMap} />
            <PostExcerpt post={post} />
            <ReadMoreLink post={post} />
          </div>
        ))}

      <footer>
        <Pagination currentPage={parseInt(page, 10)} numberOfPages={numberOfPages} />
      </footer>
    </main>

    <aside>
      <BlogPostsLink heading="Recommended" posts={rankedPosts} />
      <BlogTagsLink heading="Categories" tags={tags} />
    </aside>
  </div>
</Layout>
