---
import { Icon } from 'astro-icon'
import * as interfaces from '../../lib/interfaces.ts'
import {
  getAllPosts,
  getPostBySlug,
  getBlock,
  getAllBlocksByBlockId,
  downloadFile,
} from '../../lib/notion/client.ts'
import {
  getPostLink,
  filePath,
  extractTargetBlocks,
} from '../../lib/blog-helpers.ts'
import Layout from '../../layouts/Layout.astro'
import PostDate from '../../components/PostDate.astro'
import PostTags from '../../components/PostTags.astro'
import PostTitle from '../../components/PostTitle.astro'
import PostBody from '../../components/PostBody.astro'
import styles from '../../styles/blog.module.css'

export async function getStaticPaths() {
  const posts = await getAllPosts()
  return posts.map((post: interfaces.Post) => ({ params: { slug: post.Slug } }))
}

const { slug } = Astro.params

const post = await getPostBySlug(slug)
if (!post) {
  throw new Error('Post not found. slug: ${slug}')
}

const blocks = await getAllBlocksByBlockId(post.PageId)

const fileAtacchedBlocks = extractTargetBlocks('image', blocks)
  .concat(extractTargetBlocks('file', blocks))
  .filter((block) => {
    if (!block) {
      return false
    }
    const imageOrFile = block.Image || block.File
    return imageOrFile && imageOrFile.File && imageOrFile.File.Url
  })

// Download files
await Promise.all(
  fileAtacchedBlocks
    .map(async (block) => {
      const expiryTime = (block.Image || block.File).File.ExpiryTime
      if (Date.parse(expiryTime) > Date.now()) {
        return Promise.resolve(block)
      }
      return getBlock(block.Id)
    })
    .map((promise) =>
      promise.then((block) => {
        let url!: URL
        try {
          url = new URL((block.Image || block.File).File.Url)
        } catch (err) {
          console.log('Invalid file URL')
          return Promise.reject()
        }
        return Promise.resolve(url)
      })
    )
    .map((promise) => promise.then(downloadFile))
)

let ogImage = ''
if (post.FeaturedImage && post.FeaturedImage.Url) {
  ogImage = new URL(filePath(new URL(post.FeaturedImage.Url)), Astro.site)
}
---

<Layout
  title={post.Title}
  description={post.Excerpt}
  path={getPostLink(post.Slug)}
  ogImage={ogImage}
>
  <div slot="main" class={styles.main}>
    <div class="post-title">
      <PostTitle post={post} />
    </div>
    <div class="post-date">
      <PostDate post={post} />
    </div>
    <div class="post-tags-container">
      <div class="tag-icon-container">
        <Icon name="octicon:tag-24" />
      </div>
      <PostTags post={post} />
    </div>
    <PostBody blocks={blocks} />
  </div>
</Layout>

<style>
  footer {
    margin-top: 0.4rem;
    padding: 0;
    border: 0;
  }
  div.post-title {
    font-size: 1.6rem;
    margin-bottom: 0.5rem;
  }
  @media (max-width: 640px) {
    div.post-title {
      font-size: 1.4rem;
    }
  }
  .post-date {
    margin-bottom: 1.2rem;
    color: var(--fg);
  }
  .post-tags-container {
    display: flex;
    margin-bottom: 2rem;
  }
  .tag-icon-container {
    width: 1.6rem;
    height: 1.6rem;
    margin-right: 0.3rem;
  }
</style>
