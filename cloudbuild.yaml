steps:
  - id: 'Delete old Docker images'
    name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: bash
    args:
      - -ceux
      - |
        gcloud artifacts docker images list ${_IMAGE_NAME} --include-tags --filter="TAGS!=latest" --format="value(DIGEST)" | xargs -n1 -I{} gcloud artifacts docker images delete --quiet --async ${_IMAGE_NAME}@{}

  - id: 'Build Docker image'
    name: 'gcr.io/cloud-builders/docker'
    entrypoint: bash
    args:
      - -ceux
      - >-
        docker
        build
        --build-arg  NOTION_API_SECRET=$$NOTION_API_SECRET
        --build-arg  DATABASE_ID=$$DATABASE_ID
        --build-arg  INDEX_PAGE_ID=$$INDEX_PAGE_ID
        --build-arg  SUBSCRIPTION_PAGE_ID=$$SUBSCRIPTION_PAGE_ID
        --build-arg  NEXT_PUBLIC_URL=${_NEXT_PUBLIC_URL}
        --build-arg  NEXT_PUBLIC_GA_TRACKING_ID=${_NEXT_PUBLIC_GA_TRACKING_ID}
        -t           ${_IMAGE_NAME}
        --cache-from ${_IMAGE_NAME}:latest
        .
    secretEnv: ['NOTION_API_SECRET', 'DATABASE_ID', 'INDEX_PAGE_ID', 'SUBSCRIPTION_PAGE_ID']

  - id: 'Push Docker image'
    name: 'gcr.io/cloud-builders/docker'
    args: ['push', '${_IMAGE_NAME}']

#  - id: 'Deploy to Cloud Run'
#    name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
#    entrypoint: gcloud
#    args:
#      [
#        'run',
#        'deploy',
#        '${_SERVICE_NAME}',
#        '--image',
#        '${_IMAGE_NAME}',
#        '--region',
#        '${_REGION}',
#      ]
#
#  - id: 'Purge Cloudflare cache'
#    name: 'gcr.io/gcp-runtimes/ubuntu_18_0_4'
#    entrypoint: bash
#    args:
#      - -ceux
#      - >-
#        curl
#        -d '{"purge_everything":true}'
#        -H 'Content-Type:application/json'
#        -H "Authorization: Bearer $$CLOUDFLARE_API_TOKEN"
#        -X POST "https://api.cloudflare.com/client/v4/zones/$$CLOUDFLARE_ZONE_ID/purge_cache"
#    secretEnv: ['CLOUDFLARE_ZONE_ID', 'CLOUDFLARE_API_TOKEN']

substitutions:
  _REGION: asia-northeast1
  _REPOSITORY: alpacat
  _SERVICE_NAME: notion-blog
  _IMAGE_NAME: '${_REGION}-docker.pkg.dev/${PROJECT_ID}/${_REPOSITORY}/${_SERVICE_NAME}'
  _NEXT_PUBLIC_URL: ''
  _NEXT_PUBLIC_GA_TRACKING_ID: ''

availableSecrets:
  secretManager:
  - versionName: 'projects/${PROJECT_ID}/secrets/NOTION_API_SECRET/versions/latest'
    env: NOTION_API_SECRET
  - versionName: 'projects/${PROJECT_ID}/secrets/DATABASE_ID/versions/latest'
    env: DATABASE_ID
  - versionName: 'projects/${PROJECT_ID}/secrets/INDEX_PAGE_ID/versions/latest'
    env: INDEX_PAGE_ID
  - versionName: 'projects/${PROJECT_ID}/secrets/SUBSCRIPTION_PAGE_ID/versions/latest'
    env: SUBSCRIPTION_PAGE_ID
#  - versionName: 'projects/${PROJECT_ID}/secrets/CLOUDFLARE_API_TOKEN/versions/latest'
#    env: CLOUDFLARE_API_TOKEN
#  - versionName: 'projects/${PROJECT_ID}/secrets/CLOUDFLARE_ZONE_ID/versions/latest'
#    env: CLOUDFLARE_ZONE_ID

options:
  dynamic_substitutions: true

timeout: 900s

images:
  - '${_IMAGE_NAME}'
